FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul

# -----------------------------
# 1. 타임존 설정
# -----------------------------
RUN apt-get update && apt-get install -y tzdata && \
    ln -fs /usr/share/zoneinfo/Asia/Seoul /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata

# -----------------------------
# 2. 기본 빌드 툴 설치
# -----------------------------
RUN apt-get update && apt-get install -y \
    build-essential git wget curl unzip pkg-config cmake ninja-build \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# 3. Python 관련
# -----------------------------
RUN apt-get update && apt-get install -y \
    python3-dev python3-pip python3-tk \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# 4. C/C++ 라이브러리
# -----------------------------
RUN apt-get update && apt-get install -y \
    libprotobuf-dev protobuf-compiler libprotoc-dev \
    libboost-all-dev libedit-dev libnuma-dev zlib1g zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# 5. 분석/툴체인
# -----------------------------
RUN apt-get update && apt-get install -y \
    m4 scons libgoogle-perftools-dev \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# 6. LLVM 11 + Clang 11 (TVM v0.7 호환)
# -----------------------------
RUN apt-get update && apt-get install -y \
    llvm-11 llvm-11-dev llvm-11-tools clang-11 libclang-11-dev \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------
# 7. Python 패키지 설치
# -----------------------------
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install numpy decorator attrs tornado

# -----------------------------
# 8. gem5 복사
# -----------------------------
WORKDIR /root
COPY gem5 /root/gem5

# -----------------------------
# 9. TVM (v0.7 고정)
# -----------------------------
WORKDIR /root
RUN bash -c "until git clone --recursive https://github.com/apache/tvm.git; do echo 'Retrying git clone...'; sleep 5; done"

WORKDIR /root/tvm
RUN git fetch --tags && git checkout v0.7 && git submodule update --init --recursive

WORKDIR /root/tvm/build
RUN cp ../cmake/config.cmake ./ && \
    echo "set(USE_LLVM /usr/bin/llvm-config-11)" >> config.cmake && \
    echo "set(USE_VTA ON)" >> config.cmake && \
    cmake .. && \
    make -j8

# -----------------------------
# 10. gem5 빌드
# -----------------------------
WORKDIR /root/gem5
CMD ["sh", "-c", "scons build/ARM/gem5.opt -j8"]

